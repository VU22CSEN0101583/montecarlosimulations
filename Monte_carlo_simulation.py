# -*- coding: utf-8 -*-
"""Monte carlo Simulations

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LZhAm0HPgaUYVrpRBMukWKTocvtu5V5g
"""

!pip install yfinance
import numpy as np
import matplotlib.pyplot as plt
import yfinance as yf
import pandas as pd

# Parameters
ticker = "AAPL"   # You can change to MSFT, TSLA, etc.
start_date = "2018-01-01"
end_date = "2024-12-31"

# Download historical stock data
data = yf.download(ticker, start=start_date, end=end_date)
data = data['Close']

# Display last few rows
data.tail()

mean = returns.mean().item()
std = returns.std().item()

print(f"Mean daily return: {mean:.5f}")
print(f"Standard deviation of returns: {std:.5f}")

# Simulation parameters
num_simulations = 1000    # number of random scenarios
time_horizon = 252        # trading days in 1 year
last_price = data.iloc[-1]

# Run simulations
simulations = []
for _ in range(num_simulations):
    prices = [last_price]
    for _ in range(time_horizon):
        prices.append(prices[-1] * (1 + np.random.normal(mean, std)))
    simulations.append(prices)

simulations = np.array(simulations)

plt.figure(figsize=(12,6))
plt.plot(data.index, data, label="Historical Price", color="black")

for i in range(50):  # plot only first 50 paths for clarity
    plt.plot(range(len(data), len(data)+time_horizon+1), simulations[i], alpha=0.2, color="blue")

plt.title(f"Monte Carlo Simulation of {ticker} Stock Prices ({num_simulations} runs)")
plt.xlabel("Days Ahead")
plt.ylabel("Price")
plt.legend()
plt.show()
